# -*- coding: utf-8 -*-
"""video_psnr.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18STarEdt-pMd25bR-KJi5wJ928idxHX6
"""

!git clone https://github.com/Pravartya/MTP-2.git

!apt install ffmpeg

from google.colab import drive
drive.mount('/content/drive')

from __future__ import print_function, division
import os, cv2, glob, copy, shutil, numpy as np
from tqdm import tqdm_notebook

## Target frames: 
if os.path.exists("frames"):
    shutil.rmtree("frames")  
os.makedirs("frames")
if os.path.exists("data"):
    shutil.rmtree("data")  
os.makedirs("data")
# os.system('ffmpeg -i /kaggle/input/360-video/input.mp4 -vf fps=30 -s 4096x2048 frames/frame%000d.png')
os.system('ffmpeg -i /content/drive/MyDrive/sample.mp4 -vf fps=30 -s 4096x2048 frames/frame%000d.png')

frames = os.listdir('frames')
i = 1
for frm in tqdm_notebook(frames):
    frame = "frames/" + frm
    frame = cv2.imread(frame)
    b,g,r = cv2.split(frame)
    frame = cv2.merge([r,g,b])
    j = 1
    tiles = []
    
    stepr = frame.shape[0] / 200
    stepc = frame.shape[1] / 200
    
    rl = [stepr*x for x in range(200) ] 
    cl = [stepc*x for x in range(200) ] 

    
    
    for r in range(0, frame.shape[0], 200):
        for c in range(0, frame.shape[1], 200):
            tile = frame[r:r+200, c:c+200]
            tiles.append(tile)
            j += 1
    
#     for r in rl:
#         for c in cl:
#             r = int(r)
#             c = int(c)
#             tile = frame[r:r+200, c:c+200]
#             tiles.append(tile)
#             j += 1
        
    
    name = frm[:-4]
    np.save('data/' + name + '.npy', np.array(tiles))
    i += 1

!cp -r '/content/frames' /content/drive/MyDrive/Frames/

!touch "/content/frames"

!rm -rf "/content/MTP-2"

!rm -rf "/content/frames"

from google.colab import files
uploaded = files.upload()

if os.path.exists("framesDS"):
    shutil.rmtree("framesDS")  
os.makedirs("framesDS")
if os.path.exists("dataDS"):
    shutil.rmtree("dataDS")  
os.makedirs("dataDS")
os.system('ffmpeg -i /content/drive/MyDrive/sample.mp4 -vf fps=30 -s 256x128 framesDS/frame%000d.png')
frames = os.listdir('framesDS')
i = 1
for frm in tqdm_notebook(frames):
    frame = "framesDS/" + frm
    frame = cv2.imread(frame)
    b,g,r = cv2.split(frame)
    frame = cv2.merge([r,g,b])
    j = 1
    tiles = []
    
    rl = [4*x for x in range(50) ] 
    cl = [4*x for x in range(50) ] 

    
    for r in range(0, frame.shape[0], 50):
        for c in range(0, frame.shape[1], 50):
            tile = frame[r:r+50, c:c+50]
            tiles.append(tile)
            j += 1

#     for r in rl:
#         for c in cl:
#             tile = frame[r:r+50, c:c+50]
#             tiles.append(tile)
#             j += 1


    name = frm[:-4]
    np.save('dataDS/' + name + '.npy', np.array(tiles))
    i += 1

!cp -r '/content/framesDS' /content/drive/MyDrive/Frames/

def psnr(img1, img2):
    mse = np.mean((img1 - img2) ** 2)
    return 20 * math.log10(255.0 / math.sqrt(mse))

size = len([name for name in os.listdir('/content/drive/MyDrive/Frames/frames') if os.path.isfile(os.path.join('/content/drive/MyDrive/Frames/frames', name))])
print(size)

size = len([name for name in os.listdir('/content/drive/MyDrive/Frames/framesDS') if os.path.isfile(os.path.join('/content/drive/MyDrive/Frames/framesDS', name))])
print(size)

import os, math, cv2, numpy as np
"""
ffmpeg -f rawvideo -vcodec rawvideo -s 4000x2000 -r 29.97 -pix_fmt yuv420p -i NYC360_1sec.yuv -s 4000x2000 -c:v libx265 -preset slow -qp 40 -r 30 NYC360_2_5M.mp4
# """
# if os.path.exists("dir1"):
#     shutil.rmtree("dir1")  
# os.makedirs("dir1")
# if os.path.exists("dir2"):
#     shutil.rmtree("dir2")  
# os.makedirs("dir2")
# os.system('ffmpeg -i NYC360_1sec.mp4 -vf fps=30 -s 4000x2000 dir1/frame%000d.png')
# os.system('ffmpeg -i NYC360_2_5M.mp4 -vf fps=30 -s 4000x2000 dir2/frame%000d.png')

# 330 frames

d = []
frames = range(1,size+1)

for frame_id in frames:
    frame1 = '/content/drive/MyDrive/Frames/frames/frame'+str(frame_id)+'.png'
    print(frame1)
    frame1 = cv2.imread(frame1)
    # frame1 = frame1.repeat(4,axis =0).repeat(4,axis = 1)
    frame2 = '/content/framesDS/frame'+str(frame_id)+'.png'
    frame2 = cv2.imread(frame2)
    # frame2 = frame2.repeat(4, axis=0).repeat(4, axis=1)
    frame2 = frame2.repeat(16, axis=0).repeat(16,axis=1)
    p = psnr(frame1, frame2)
    d.append(p)
    print(p)

len(d)

frame_in_chunk = 30    # 1 sec for each chunk

chunks = (size+frame_in_chunk-1)//frame_in_chunk

chunks

y = []
for i in range(1,chunks):
  avg = 0
  for j in range(frame_in_chunk):
    if((i-1)*frame_in_chunk+j<size):
      avg += d[(i-1)*frame_in_chunk+j]
  avg = avg / frame_in_chunk
  y.append(avg)

print("Avg: ")
print(np.mean(np.array(y)))

y

x = np.ones(len(y))
for i in range(len(y)):
  x[i] = i+1

x.astype(int)

import matplotlib.pyplot as plt
plt.ylim(30,40)
plt.xlabel("Chunks")
plt.ylabel("PSNR")
plt.plot(x,y, linestyle='--', marker='o', color='b', label='line with marker')
plt.show()

plt.savefig('psnr2.png')

y

dat = {'psnr44' : list(y)}
# my_file.write(dat)
dat['psnr44'] = str(dat['psnr44'])
import json
f_name = f'psnr44.jason'
f = open(f_name,  "w")
json.dump(dat, f)



dat['psnr44']

